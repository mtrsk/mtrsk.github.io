<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Benevides&#39; Blog</title>
    <link>https://schonfinkel.github.io/categories/notes/</link>
    <description>Recent content in Notes on Benevides&#39; Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://schonfinkel.github.io/categories/notes/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dependent Types</title>
      <link>https://schonfinkel.github.io/notes/2024/dependent-types/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2024/dependent-types/</guid>
      <description>:ID: 7580b45a-1dba-4690-bfbf-652fee25e1d9</description>
    </item>
    <item>
      <title>Elixir</title>
      <link>https://schonfinkel.github.io/notes/2024/elixir/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2024/elixir/</guid>
      <description>:ID: 8d568d81-9c22-4d94-81b2-27a2d730ba98 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;FP&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;Elixir&amp;rdquo;&#xA;Elixir describes itself as a functional, meta-programming-aware language built on top of the Erlang virtual machine.&#xA;Basics Protocols </description>
    </item>
    <item>
      <title>Postgres Server</title>
      <link>https://schonfinkel.github.io/notes/2024/postgres-server/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2024/postgres-server/</guid>
      <description>:ID: ae205cab-10ea-4cff-9051-fef9021638b6 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Databases&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;SQL&amp;rdquo; &amp;ldquo;Postgres&amp;rdquo;&#xA;Locating the database server files Postgres Database server files are initially stored in a location referred to as data directory:&#xA;SHOW data_directory; </description>
    </item>
    <item>
      <title>Sql</title>
      <link>https://schonfinkel.github.io/notes/2024/sql/</link>
      <pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2024/sql/</guid>
      <description>:ID: 11f7d9cc-51a6-4897-955b-37a756105677 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Databases&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;SQL&amp;rdquo;&#xA;Logical Query Processing Order FROM JOIN Step Description 1 Cartesian product 2 Qualification step (i.e. the ON filter) 3 LEFT or RIGHT reservations If the specified JOIN type is a CROSS JOIN, then the query planner stops at Step 1 and return the cartesian product to the next clause. All other join types proceed to the qualification step.&#xA;INNER and OUTER JOINS are called &amp;ldquo;qualified JOINs&amp;rdquo;, the qualification predicated is specified using the ON keyword, which filters all rows from the previous cartesian step where the predicate is TRUE.</description>
    </item>
    <item>
      <title>Byzantine Generals Problem</title>
      <link>https://schonfinkel.github.io/notes/2024/byzantine-generals-problem/</link>
      <pubDate>Fri, 16 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2024/byzantine-generals-problem/</guid>
      <description>:ID: 68219535-efeb-4835-9670-fd2747376cf3&#xA;The Byzantine Generals&amp;rsquo; Problem is an analogy used to describe the difficulties of reaching consensus in Distributed Systems, this is a summary from (Lamport, Shostak, and Pease 2019).&#xA;Introduction A reliable computer system must be able to cope with the failure of one or more of its components. A failed component may exhibit a type of behavior that is often overlooked namely, sending conflicting information to different parts of the system.</description>
    </item>
    <item>
      <title>Architectural Styles And The Design Of Network Based Software Architectures</title>
      <link>https://schonfinkel.github.io/notes/2023/architectural-styles-and-the-design-of-network-based-software-architectures/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2023/architectural-styles-and-the-design-of-network-based-software-architectures/</guid>
      <description>:ID: f922bff8-f1ab-4322-a0af-b6eba02b2811&#xA;In 2000, Roy Fielding, then at U.C. Irvine, published a seminal PhD dissertation on the web: &amp;ldquo;Architectural Styles and the Design of Network-based Software Architectures.&amp;rdquo; Fielding had been working on the open source Apache HTTP Server and his thesis was a description of what he felt was a new and distinct networking architecture that had emerged in the early web. Fielding had worked on the initial HTTP specifications and, in the paper, defined the web’s hypermedia network model using the term REpresentational State Transfer (REST).</description>
    </item>
    <item>
      <title>As We May Think</title>
      <link>https://schonfinkel.github.io/notes/2023/as-we-may-think/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2023/as-we-may-think/</guid>
      <description>:ID: 22759a84-3a09-464f-b0f7-e5d0a7bf5295&#xA;In this article Bush described a device called a Memex, which, using a complex mechanical system of reels and microfilm, along with an encoding system, would allow users to jump between related frames of content. The Memex was never actually implemented, but it was an inspiration for later work on the idea of Hypermedia.</description>
    </item>
    <item>
      <title>The Mother Of All Demos</title>
      <link>https://schonfinkel.github.io/notes/2023/the-mother-of-all-demos/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2023/the-mother-of-all-demos/</guid>
      <description>:ID: 116d7265-e46f-4b42-b5ef-af1e913e2c12&#xA;Englebart demonstrated an unbelievable amount of technology:&#xA;Remote, collaborative text editing with his peers in Menlo Park Video and audio chat An integrated windowing system, with window resizing, etc A recognizable hypertext, whereby clicking on underlined text navigated to new content Despite receiving a standing ovation from a shocked audience after his talk, it was decades before the technologies Englebart demonstrated became mainstream.</description>
    </item>
    <item>
      <title>Hypermediasystems</title>
      <link>https://schonfinkel.github.io/notes/2023/hypermediasystems/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2023/hypermediasystems/</guid>
      <description>:ID: 10d70300-3c11-48f7-af3b-d5d07d5a5f39&#xA;Chapter 01 - Hypermedia: A Reintroduction What Is Hypermedia? Hypermedia is a media, for example a text, that includes non-linear branching from one location in the media to another, via, for example, hyperlinks embedded in the media.&#xA;A Brief History of Hypermedia Where did the idea of hypermedia come from?&#xA;The 1945 article As We May Think, from Vanevar Bush Ted Nelson&amp;rsquo;s work on the &amp;ldquo;Hypertext Editing System&amp;rdquo; at Brown University and who later created the File Retrieval and Editing System (FRESS) Douglas Engelbart&amp;rsquo;s thesis on the &amp;ldquo;The Mother Of All Demos&amp;rdquo; Modern Implementation Tim Berners-Lee&amp;rsquo;s &amp;ldquo;World Wide Web&amp;rdquo; Roy Fielding&amp;rsquo;s &amp;ldquo;Architectural Styles And The Design Of Network Based Software Architectures&amp;rdquo; The World’s Most Successful Hypertext: HTML The Essence of HTML as a Hypermedia Anchor tags</description>
    </item>
    <item>
      <title>Mandarin Chinese</title>
      <link>https://schonfinkel.github.io/notes/2022/mandarin-chinese/</link>
      <pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2022/mandarin-chinese/</guid>
      <description>:ID: e699d35b-f546-4607-b444-d2be225d2574&#xA;Notes from the following courses:&#xA;Basic Mandarin Mandarin Chinese 1 Basic Mandarin at CII Pictograms Character Pronunciation Kind Meaning 木 mù noun tree, wood, coffin 火 huǒ fire, hot, urgent Useful words Character Pronunciation Kind Meaning 你 nǐ pron. you 好 hǎo adj. good 我 wǒ pron. I, me 是 shì v. to be, is, are, was, were 呢 ne part. 叫 jiào v. to be called 很 hěn adv.</description>
    </item>
    <item>
      <title>Kubernetes Ingress</title>
      <link>https://schonfinkel.github.io/notes/2021/kubernetes-ingress/</link>
      <pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/kubernetes-ingress/</guid>
      <description>:ID: bd5dba58-0dd8-4b89-aabb-8bd49ed8c27c&#xA;What is an Ingress Controller? Opens the Kubernetes cluster to receive traffic from the external world Routes traffic to the backend services </description>
    </item>
    <item>
      <title>Gitops</title>
      <link>https://schonfinkel.github.io/notes/2021/gitops/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/gitops/</guid>
      <description>:ID: e670c5d9-8238-4bf4-a916-e9ffb3097fa1&#xA;Architecture Components Items Source Control Github, Gitlab, &amp;hellip; Git Resitory Container/Helm Registry Gitlab Registry, Azure Container Registry, &amp;hellip; Operator Flux, Argo CD, Kubectl apply, &amp;hellip; Namespace A well defined namespace policy (per app, per environment, &amp;hellip; ArgoCD Architecture API Server&#xA;A gRPC/REST web server that exposes the API, it&amp;rsquo;s used by both the UI &amp;amp; CLI&#xA;Repository Server&#xA;Maintains a local cache of the git repository&#xA;Application Controller</description>
    </item>
    <item>
      <title>Kubernetes Secrets</title>
      <link>https://schonfinkel.github.io/notes/2021/kubernetes-secrets/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/kubernetes-secrets/</guid>
      <description>:ID: 2bdf666d-f2a0-410a-a46a-45815fdf7285&#xA;A Kubernetes Secret is an object that contains a small amount of sensitive data such as a password, a token, or a key. Such information might otherwise be put in a Pod specification or in a container image. Using a Secret means that you don&amp;rsquo;t need to include confidential data in your application code.&#xA;YAML apiVersion: v1 kind: Secret metadata: name: example-secret type: Opaque data: app-password: NXVQNFNlS3J5dA== admin-password: RDBub3Q1VDM0TA== Accessing a secret As an environment variable apiVersion: apps/v1 .</description>
    </item>
    <item>
      <title>History Of Logic</title>
      <link>https://schonfinkel.github.io/notes/2021/history-of-logic/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/history-of-logic/</guid>
      <description>:ID: 0c082d02-4771-4860-8119-83b263c00ff3&#xA;Notes from the book &amp;ldquo;History of Logic: from Aristotle to Tarski&amp;rdquo;.&#xA;Intro Roughly speaking, the development of logic in Europe has had three &amp;ldquo;golden ages&amp;rdquo;:&#xA;Greek period, from around 350 to 200 BCE and included thinkers like: Aristotle Diodoru Cronus Chrysippus High medieval period, from around 1100 to 1400 Modern period, from around 1850 up to the present day The Greek period From the beginning of the Greek golden period we get many anticipations of later developments.</description>
    </item>
    <item>
      <title>Kubernetes Configmaps</title>
      <link>https://schonfinkel.github.io/notes/2021/kubernetes-configmaps/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/kubernetes-configmaps/</guid>
      <description>:ID: c02e9bd0-e9fb-45d0-985a-4bdcbe62b8dc&#xA;ConfigMaps A ConfigMap is a Kubernetes API object used to store non-confidential data in key-value pairs. Pods can consume ConfigMaps as environment variables, command-line arguments, or as configuration files in a volume.&#xA;apiVersion: v1 kind: ConfigMap metadata: name: game-demo labels: app: game-demo data: # property-like keys; each key maps to a simple value player_initial_lives: &amp;#34;3&amp;#34; ui_properties_file_name: &amp;#34;user-interface.properties&amp;#34; # file-like keys game.properties: | enemy.types=aliens,monsters player.maximum-lives=5 user-interface.properties: | color.good=purple color.bad=yellow allow.</description>
    </item>
    <item>
      <title>Kubernetes Storage</title>
      <link>https://schonfinkel.github.io/notes/2021/kubernetes-storage/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/kubernetes-storage/</guid>
      <description>:ID: 1369d5e6-2858-4fc5-b59c-942326890b40&#xA;Volume Types emptyDir Empty directory for storing data ephemeral data from the Pods&#xA;apiVersion: v1 kind: Pod spec: volumes: - name: html emptyDir: {} containers: - name: nginx image: nginx:alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html readOnly: false - name: html-example image: alpine:latest command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;] args: - while true; do date &amp;gt;&amp;gt; /html/index.html; sleep 10; done volumeMounts: - name: html mountPath: /html readOnly: false hostPath A volume that&amp;rsquo;s mounted in the Node&amp;rsquo;s filesystem and is shared with a Pod</description>
    </item>
    <item>
      <title>Dns</title>
      <link>https://schonfinkel.github.io/notes/2021/dns/</link>
      <pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/dns/</guid>
      <description>:ID: f5f06bf3-d288-47a8-901f-37bec1ba50e7&#xA;Why do we need DNS? Human-Friendly Name Machine-Friendly Name dns.google.com 8.8.8.8 dns.cloudfare.com 1.1.1.1 Terminology Labels Node Subdomain Domain TLD Root www . abc . xyz . com . where TLD is an abbreviation for &amp;ldquo;Top Level Domain&amp;rdquo;.&#xA;Zones Query Types Recursive Iterative </description>
    </item>
    <item>
      <title>Helm</title>
      <link>https://schonfinkel.github.io/notes/2021/helm/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/helm/</guid>
      <description>:ID: b9376a33-534c-4468-a788-df96a642a8e2&#xA;What is Helm? A tool that uses a package manager to create, install and manage applications inside a Kubernetes cluster.&#xA;What is a Helm Chart? A Helm Chart is a package containing files that will be used to deploy applications in the cluster. It consists of the following structure:&#xA;Chart.yaml Metadata for the application chart values.yaml Values to the injected at the templates in runtime templates A directory consisting of: deployment.</description>
    </item>
    <item>
      <title>Kubectl</title>
      <link>https://schonfinkel.github.io/notes/2021/kubectl/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/kubectl/</guid>
      <description>:ID: ee377537-0c8d-48c9-a181-19a2cff8c4a7&#xA;Commands View cluster information kubectl cluster-info Apply &amp;amp; Create Just creates a resource kubectl create ... Create or modify a resource kubectl apply -f pod.yml Delete Deleting a pod won&amp;rsquo;t prevent it from being recreated.&#xA;kubectl delete pod [pod-name] you need to delete it&amp;rsquo;s deployment.&#xA;kubectl delete deployment [deployment-name] Describe kubectl describe pods &amp;lt;...&amp;gt; Get View all the resources kubectl get all Get information about the pods kubectl get pods --watch kubectl get pods -o wide Get information about deployments # Lists deployments and their labels kubectl get deployment --show-labels # Get deployments with a specific label kubectl get deployment -l app=nginx Port-forward Forward port to enables external calls kubectl port-forward [pod-name] [external-port]:[internal-port] # For instance.</description>
    </item>
    <item>
      <title>Kubernetes</title>
      <link>https://schonfinkel.github.io/notes/2021/kubernetes/</link>
      <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/2021/kubernetes/</guid>
      <description>:ID: dd924a84-7d6f-41ec-98c2-aa16582c0d89&#xA;Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications. &amp;mdash;kubernetes.io&#xA;Architecture Masters Also know as control plane.&#xA;A Kubernetes master is a collection of system services that make up the control plane of the cluster. The simplest setups run all the master services on a single host. However, this is only suitable for labs and test environments. For production environments, multi-master high availability (HA) is a must have.</description>
    </item>
    <item>
      <title>Notes</title>
      <link>https://schonfinkel.github.io/notes/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      <guid>https://schonfinkel.github.io/notes/</guid>
      <description>This is the place where I dump my Org ROAM notes.&#xA;dotnet fsi notes.fsx </description>
    </item>
  </channel>
</rss>
