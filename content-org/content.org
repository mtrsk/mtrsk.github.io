#+TITLE: Benevides Blog
#+bibliography: ./refs.bib
#+HUGO_BASE_DIR: ../
#+HUGO_PAIRED_SHORTCODES: alert image
#+OPTIONS: broken-links:mark
#+AUTHOR: Marcos Benevides

* Pages
:PROPERTIES:
:EXPORT_HUGO_SECTION: /
:END:

** Home
:PROPERTIES:
:EXPORT_TITLE: homepage title
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_TYPE: homepage
:END:

#+INCLUDE: "../blog/home.org"

** Blogroll
:PROPERTIES:
:EXPORT_TITLE: Blogroll
:EXPORT_FILE_NAME: blogroll
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description A rendered version of my OPML file. :layout blogroll
:END:
This page is a rendered version of my [[https://en.wikipedia.org/wiki/OPML][OPML]] file.

* Blog  :@blog:
:PROPERTIES:
:EXPORT_HUGO_SECTION: blog
:END:

** Index
:PROPERTIES:
:EXPORT_TITLE: Blog
:EXPORT_FILE_NAME: _index
:EXPORT_DATE: 1970-01-01
:END:

Here you'll find my latest content, projects, tutorials and ramblings.

#+header: :exports both
#+header: :results raw
#+header: :output drawer
#+NAME: export-posts
#+BEGIN_SRC shell
  dotnet fsi posts.fsx
#+END_SRC

#+RESULTS: export-posts

** You Have 10 Seconds To Nixify Your Dotnet Project
:PROPERTIES:
:EXPORT_FILE_NAME: you-have-10-seconds-to-nixify-your-dotnet-project
:EXPORT_DATE: 2024-09-16
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug you-have-10-seconds-to-nixify-your-dotnet-project
:CUSTOM_ID: you-have-10-seconds-to-nixify-your-dotnet-project
:END:

#+INCLUDE: "../blog/posts/20240916-you_have_10_seconds_to_nixify_your_dotnet_project.org"
    

** Experiments With Erlang And Nix
:PROPERTIES:
:EXPORT_FILE_NAME: experiments-with-erlang-and-nix
:EXPORT_DATE: 2024-09-07
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug experiments-with-erlang-and-nix
:CUSTOM_ID: experiments-with-erlang-and-nix
:END:

#+INCLUDE: "../blog/posts/20240907-experiments_with_erlang_and_nix.org"
    

** How To Use Private Neovim Plugins On Nixos
:PROPERTIES:
:EXPORT_FILE_NAME: how-to-use-private-neovim-plugins-on-nixos
:EXPORT_DATE: 2023-09-17
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug how-to-use-private-neovim-plugins-on-nixos
:CUSTOM_ID: how-to-use-private-neovim-plugins-on-nixos
:END:

#+INCLUDE: "../blog/posts/20230917-how_to_use_private_neovim_plugins_on_nixos.org"
    

** Switching To Nixos
:PROPERTIES:
:EXPORT_FILE_NAME: switching-to-nixos
:EXPORT_DATE: 2018-08-07
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug switching-to-nixos
:CUSTOM_ID: switching-to-nixos
:END:

#+INCLUDE: "../blog/posts/20180807-switching_to_nixos.org"
    

* Notes :@notes:
:PROPERTIES:
:EXPORT_HUGO_SECTION: notes
:END:

** Index
:PROPERTIES:
:EXPORT_TITLE: Notes
:EXPORT_FILE_NAME: _index
:EXPORT_DATE: 1970-01-01
:END:

This is the place where I dump my [[https://www.orgroam.com/][Org ROAM]] notes.

#+BEGIN_EXPORT html
<svg width="800" height="600"></svg>
let is_full = false;
let graph_name = "graph.json";

function toggle_full_graph() {
  if (!is_full) {
    graph_name = "graph.json";
    d3.selectAll("g").remove();
    // Canvas size
    height = 1600;
    width = 2200;
    draw_graph(graph_name, height, width);
    is_full = true;
  }
  else {
    graph_name = "graph.json";
    d3.selectAll("g").remove();
    // Canvas size
    height = 1100;
    width = 1600;
    draw_graph(graph_name, height, width);
    is_full = false;

  }
}

function draw_graph(graph_name, height, width) {
d3.json(graph_name).then(function(data) {
    // Radius function for nodes. Node radius are function of centrality
    scale = 1.;
    radius = d => {
        if (!d.radius) {
            d.radius = 11 + 24 * Math.pow(d.centrality, 4/5);
        }
        return d.radius;
    };
    color = "#ffffff";

    // Number of colors is the number of clusters (given by communityLabel)
    num_colors = Math.max(...data.nodes.map(d => d.communityLabel)) + 1;
    angleArr = [...Array(num_colors).keys()].map(x => 2 * Math.PI * x / num_colors);
    // Cluster centers around an circle
    centersx = angleArr.map(x => Math.cos(Math.PI + x));
    centersy = angleArr.map(x => Math.sin(Math.PI + x));
    // Color palette
    nodeColors = [
        '#C98914',
        '#C55F1A',
        '#4189AD',
        '#007500',
        '#968674',
        '#5E998A',
        "#363ea9",
    ];
    // Color function just maps cluster to color palette
    nodeColor = d => {
        return nodeColors[d.communityLabel];
    };
    // Make the nodes draggable
    drag = simulation => {
        function dragsubject(event) {
            return simulation.find(event.x, event.y);
        }

        function dragstarted(event) {
            if (!event.active) simulation.alphaTarget(0.3).restart();
            event.subject.fx = event.subject.x;
            event.subject.fy = event.subject.y;        }

        function dragged(event) {
            event.subject.fx = event.x;
            event.subject.fy = event.y;
        }

        function dragended(event) {
            if (!event.active) simulation.alphaTarget(0);
            event.subject.fx = null;
            event.subject.fy = null;
        }

        return d3.drag()
            .subject(dragsubject)
            .on("start", dragstarted)
            .on("drag", dragged)
            .on("end", dragended);
    };
    // Make nodes interactive to hovering
    handleMouseOver = (d, i) => {
        nde = d3.select(d.currentTarget);
        nde.attr("fill", "#999")
            .attr("r", nde.attr("r") * 1.4);

        d3.selectAll("text")
            .filter('#' + CSS.escape(d.currentTarget.id))
            .style("display", "block");

        d3.selectAll("line")
            .attr("stroke-width", 1);

        d3.selectAll("line")
            .filter((l, _) =>
                    l.source.index == i.index ||
                    l.target.index == i.index)
            .attr("stroke-width", 8);
    };
    handleMouseOut = (d, _) => {
        nde = d3.select(d.currentTarget);
        nde.attr("fill", nodeColor)
            .attr("r", nde.attr("r") / 1.4);

        d3.selectAll("text")
            .filter('#' + CSS.escape(d.currentTarget.id))
            .style("display", "none");

    };

    // Graph data
    const links = data.links.map(d => Object.create(d));
    const nodes = data.nodes.map(d => Object.create(d));

    // Force simulation for the graph
    simulation = d3.forceSimulation(nodes)
    .alpha(0.9)
    .velocityDecay(0.6)
        .force("link", d3.forceLink(links).id(d => d.id).strength(.1))
        .force("charge", d3.forceManyBody()
               .strength(-250))
        .force('collision',
               d3.forceCollide().radius(d => radius(d) * 1.2).strength(1.5))
        .force('x', d3.forceX().x(function(d) {
            return width / 2 +  (width / 4) * centersx[d.communityLabel];
        }).strength(0.25))
        .force('y', d3.forceY().y(function(d) {
            return height / 2 +  (height / 8) * centersy[d.communityLabel];
        }).strength(0.25));

    // Create all the graph elements
    const svg = d3.select("svg#note-graph")
          .attr('max-width', '60%')
          .attr("viewBox", [0, 0, width, height]);

    const link = svg.append("g")
          .attr("stroke", "#888")
          .attr("stroke-opacity", 0.6)
          .selectAll("line")
          .data(links)
          .join("line")
          .attr("stroke-dasharray", d => (d.predicted? "5,5": "0,0"))
          .attr("stroke-width", 1);

    const node = svg.append("g")
          .selectAll("circle")
          .data(nodes)
          .join("a")
          .attr("xlink:href", d => {
              return "/notes/" + d.lnk;
          })
          .attr("id", d => "circle_" + d.lnk)
          .append("circle")
          .attr("id", d => d.id.toLowerCase())
          .attr("r", radius)
          .attr("fill", nodeColor)
          .attr("stroke", "#000")
          .attr("stroke-width", 1.3)
          .on("mouseover", handleMouseOver)
          .on("mouseout", handleMouseOut)
          .call(drag(simulation));

    node.append("title")
        .text(d => d.label.replace(/"/g, ''));

    // Nodes have a label that is visible on hover
    // They have two layers a rectangle "background" and the text on top
    const label = svg.append("g")
          .selectAll("text")
          .data(nodes)
          .join("g");
    const label_background = label.append("text")
          .style("font-size", "25px")
          .text(function (d) { return "  "+ d.label.replace(/"/g, '') + "  "; })
          .attr("dy", -25)
          .attr("id", d => d.id.toLowerCase())
          .attr("class", "node_label")
          .style("display", "none")
          .style("pointer-events", "none")
          .style("alignment-baseline", "middle")
          .attr("filter", "url(#solid)");
    const label_text = label.append("text")
          .style("fill", "#222")
          .style("font-size", "25px")
          .text(function (d) { return "  "+ d.label.replace(/"/g, '') + "  "; })
          .attr("dy", -25)
          .attr("id", d => d.id.toLowerCase())
          .attr("class", "node_label")
          .style("display", "none")
          .style("pointer-events", "none")
          .style("alignment-baseline", "middle");

    // We sort the nodes now because some of the sorting function need the
    // node radius
    sort_items();

    // Run the simulation
    simulation.on("tick", () => {
        link.attr("x1", d => d.source.x)
            .attr("y1", d => d.source.y)
            .attr("x2", d => d.target.x)
            .attr("y2", d => d.target.y);

        node.attr("cx", d => d.x)
            .attr("cy", d => d.y);

        label_text.attr("x", d => d.x)
            .attr("y", d => d.y);

        label_background.attr("x", d => d.x)
            .attr("y", d => d.y);
    });
});
}

height = 1100;
width = 1600;
draw_graph(graph_name, height, width);
#+END_EXPORT

#+header: :exports both
#+header: :results raw
#+header: :output drawer
#+NAME: export-notes
#+BEGIN_SRC shell
  dotnet fsi notes.fsx
#+END_SRC

#+RESULTS: export-notes

** Error Handling In Erlang
:PROPERTIES:
:EXPORT_FILE_NAME: error-handling-in-erlang
:EXPORT_DATE: 2024-10-01
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug error-handling-in-erlang
:CUSTOM_ID: error-handling-in-erlang
:END:

#+INCLUDE: "../notes/20241001192402-error_handling_in_erlang.org"
    

** Scsi
:PROPERTIES:
:EXPORT_FILE_NAME: scsi
:EXPORT_DATE: 2024-10-01
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug scsi
:CUSTOM_ID: scsi
:END:

#+INCLUDE: "../notes/20241001154953-scsi.org"
    

** Postgres Server
:PROPERTIES:
:EXPORT_FILE_NAME: postgres-server
:EXPORT_DATE: 2024-10-01
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug postgres-server
:CUSTOM_ID: postgres-server
:END:

#+INCLUDE: "../notes/20241001144549-postgres_server.org"
    

** Concurrent Erlang
:PROPERTIES:
:EXPORT_FILE_NAME: concurrent-erlang
:EXPORT_DATE: 2024-09-30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug concurrent-erlang
:CUSTOM_ID: concurrent-erlang
:END:

#+INCLUDE: "../notes/20240930224229-concurrent_erlang.org"
    

** Sql
:PROPERTIES:
:EXPORT_FILE_NAME: sql
:EXPORT_DATE: 2024-09-28
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug sql
:CUSTOM_ID: sql
:END:

#+INCLUDE: "../notes/20240928223026-sql.org"
    

** Otp
:PROPERTIES:
:EXPORT_FILE_NAME: otp
:EXPORT_DATE: 2024-09-28
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug otp
:CUSTOM_ID: otp
:END:

#+INCLUDE: "../notes/20240928181517-otp.org"
    

** Split Brain
:PROPERTIES:
:EXPORT_FILE_NAME: split-brain
:EXPORT_DATE: 2024-09-28
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug split-brain
:CUSTOM_ID: split-brain
:END:

#+INCLUDE: "../notes/20240928110111-split_brain.org"
    

** Stonith
:PROPERTIES:
:EXPORT_FILE_NAME: stonith
:EXPORT_DATE: 2024-09-26
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug stonith
:CUSTOM_ID: stonith
:END:

#+INCLUDE: "../notes/20240926235726-stonith.org"
    

** Clusters
:PROPERTIES:
:EXPORT_FILE_NAME: clusters
:EXPORT_DATE: 2024-09-26
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug clusters
:CUSTOM_ID: clusters
:END:

#+INCLUDE: "../notes/20240926233504-clusters.org"
    

** Quorum
:PROPERTIES:
:EXPORT_FILE_NAME: quorum
:EXPORT_DATE: 2024-09-25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug quorum
:CUSTOM_ID: quorum
:END:

#+INCLUDE: "../notes/20240925092856-quorum.org"
    

** Iscsi
:PROPERTIES:
:EXPORT_FILE_NAME: iscsi
:EXPORT_DATE: 2024-09-24
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug iscsi
:CUSTOM_ID: iscsi
:END:

#+INCLUDE: "../notes/20240924205200-iscsi.org"
    

** Drbd
:PROPERTIES:
:EXPORT_FILE_NAME: drbd
:EXPORT_DATE: 2024-09-24
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug drbd
:CUSTOM_ID: drbd
:END:

#+INCLUDE: "../notes/20240924204159-drbd.org"
    

** Sequential Erlang
:PROPERTIES:
:EXPORT_FILE_NAME: sequential-erlang
:EXPORT_DATE: 2024-09-24
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug sequential-erlang
:CUSTOM_ID: sequential-erlang
:END:

#+INCLUDE: "../notes/20240924122449-sequential_erlang.org"
    

** Linux
:PROPERTIES:
:EXPORT_FILE_NAME: linux
:EXPORT_DATE: 2024-09-24
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug linux
:CUSTOM_ID: linux
:END:

#+INCLUDE: "../notes/20240924092617-linux.org"
    

** Postgres Window Functions
:PROPERTIES:
:EXPORT_FILE_NAME: postgres-window-functions
:EXPORT_DATE: 2024-09-23
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug postgres-window-functions
:CUSTOM_ID: postgres-window-functions
:END:

#+INCLUDE: "../notes/20240923110122-postgres_window_functions.org"
    

** Nixos Modules
:PROPERTIES:
:EXPORT_FILE_NAME: nixos-modules
:EXPORT_DATE: 2024-09-22
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug nixos-modules
:CUSTOM_ID: nixos-modules
:END:

#+INCLUDE: "../notes/20240922141319-nixos_modules.org"
    

** Nix
:PROPERTIES:
:EXPORT_FILE_NAME: nix
:EXPORT_DATE: 2024-09-22
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug nix
:CUSTOM_ID: nix
:END:

#+INCLUDE: "../notes/20240922120854-nix.org"
    

** Postgres Indexes
:PROPERTIES:
:EXPORT_FILE_NAME: postgres-indexes
:EXPORT_DATE: 2024-09-21
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug postgres-indexes
:CUSTOM_ID: postgres-indexes
:END:

#+INCLUDE: "../notes/20240921194608-postgres_indexes.org"
    

** Postgres Functions
:PROPERTIES:
:EXPORT_FILE_NAME: postgres-functions
:EXPORT_DATE: 2024-09-21
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug postgres-functions
:CUSTOM_ID: postgres-functions
:END:

#+INCLUDE: "../notes/20240921194441-postgres_functions.org"
    

** Postgres Ctes
:PROPERTIES:
:EXPORT_FILE_NAME: postgres-ctes
:EXPORT_DATE: 2024-09-21
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug postgres-ctes
:CUSTOM_ID: postgres-ctes
:END:

#+INCLUDE: "../notes/20240921191551-postgres_ctes.org"
    

** Postgres Subqueries
:PROPERTIES:
:EXPORT_FILE_NAME: postgres-subqueries
:EXPORT_DATE: 2024-09-18
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug postgres-subqueries
:CUSTOM_ID: postgres-subqueries
:END:

#+INCLUDE: "../notes/20240918131408-postgres_subqueries.org"
    

** Postgres
:PROPERTIES:
:EXPORT_FILE_NAME: postgres
:EXPORT_DATE: 2024-08-20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug postgres
:CUSTOM_ID: postgres
:END:

#+INCLUDE: "../notes/20240820100534-postgres.org"
    

** Byzantine Generals Problem
:PROPERTIES:
:EXPORT_FILE_NAME: byzantine-generals-problem
:EXPORT_DATE: 2024-08-16
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug byzantine-generals-problem
:CUSTOM_ID: byzantine-generals-problem
:END:

#+INCLUDE: "../notes/20240816193136-byzantine_generals_problem.org"
    

** Type Driven Development
:PROPERTIES:
:EXPORT_FILE_NAME: type-driven-development
:EXPORT_DATE: 2024-07-15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug type-driven-development
:CUSTOM_ID: type-driven-development
:END:

#+INCLUDE: "../notes/20240715225258-type_driven_development.org"
    

** Cap Theorem
:PROPERTIES:
:EXPORT_FILE_NAME: cap-theorem
:EXPORT_DATE: 2024-07-11
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug cap-theorem
:CUSTOM_ID: cap-theorem
:END:

#+INCLUDE: "../notes/20240711090045-cap_theorem.org"
    

** Designing For Scalability With Erlang
:PROPERTIES:
:EXPORT_FILE_NAME: designing-for-scalability-with-erlang
:EXPORT_DATE: 2024-07-09
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug designing-for-scalability-with-erlang
:CUSTOM_ID: designing-for-scalability-with-erlang
:END:

#+INCLUDE: "../notes/20240709110323-designing_for_scalability_with_erlang.org"
    

** Programming Erlang
:PROPERTIES:
:EXPORT_FILE_NAME: programming-erlang
:EXPORT_DATE: 2024-07-06
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug programming-erlang
:CUSTOM_ID: programming-erlang
:END:

#+INCLUDE: "../notes/20240706213027-programming_erlang.org"
    

** Monad
:PROPERTIES:
:EXPORT_FILE_NAME: monad
:EXPORT_DATE: 2024-06-19
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug monad
:CUSTOM_ID: monad
:END:

#+INCLUDE: "../notes/20240619115816-monad.org"
    

** Erlang
:PROPERTIES:
:EXPORT_FILE_NAME: erlang
:EXPORT_DATE: 2024-06-19
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug erlang
:CUSTOM_ID: erlang
:END:

#+INCLUDE: "../notes/20240619114451-erlang.org"
    

** Architectural Styles And The Design Of Network Based Software Architectures
:PROPERTIES:
:EXPORT_FILE_NAME: architectural-styles-and-the-design-of-network-based-software-architectures
:EXPORT_DATE: 2023-10-18
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug architectural-styles-and-the-design-of-network-based-software-architectures
:CUSTOM_ID: architectural-styles-and-the-design-of-network-based-software-architectures
:END:

#+INCLUDE: "../notes/20231018195743-architectural_styles_and_the_design_of_network_based_software_architectures.org"
    

** The Mother Of All Demos
:PROPERTIES:
:EXPORT_FILE_NAME: the-mother-of-all-demos
:EXPORT_DATE: 2023-10-18
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug the-mother-of-all-demos
:CUSTOM_ID: the-mother-of-all-demos
:END:

#+INCLUDE: "../notes/20231018195150-the_mother_of_all_demos.org"
    

** As We May Think
:PROPERTIES:
:EXPORT_FILE_NAME: as-we-may-think
:EXPORT_DATE: 2023-10-18
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug as-we-may-think
:CUSTOM_ID: as-we-may-think
:END:

#+INCLUDE: "../notes/20231018194552-as_we_may_think.org"
    

** Hypermediasystems
:PROPERTIES:
:EXPORT_FILE_NAME: hypermediasystems
:EXPORT_DATE: 2023-10-15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug hypermediasystems
:CUSTOM_ID: hypermediasystems
:END:

#+INCLUDE: "../notes/20231015192823-hypermediasystems.org"
    

** Monoid
:PROPERTIES:
:EXPORT_FILE_NAME: monoid
:EXPORT_DATE: 2023-10-08
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug monoid
:CUSTOM_ID: monoid
:END:

#+INCLUDE: "../notes/20231008214945-monoid.org"
    

** R Module Homomorphism
:PROPERTIES:
:EXPORT_FILE_NAME: r-module-homomorphism
:EXPORT_DATE: 2023-10-07
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug r-module-homomorphism
:CUSTOM_ID: r-module-homomorphism
:END:

#+INCLUDE: "../notes/20231007182834-r_module_homomorphism.org"
    

** Left R Module
:PROPERTIES:
:EXPORT_FILE_NAME: left-r-module
:EXPORT_DATE: 2023-10-07
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug left-r-module
:CUSTOM_ID: left-r-module
:END:

#+INCLUDE: "../notes/20231007165834-left_r_module.org"
    

** Commutative Ring
:PROPERTIES:
:EXPORT_FILE_NAME: commutative-ring
:EXPORT_DATE: 2023-10-07
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug commutative-ring
:CUSTOM_ID: commutative-ring
:END:

#+INCLUDE: "../notes/20231007164648-commutative_ring.org"
    

** Abelian Group
:PROPERTIES:
:EXPORT_FILE_NAME: abelian-group
:EXPORT_DATE: 2023-10-07
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug abelian-group
:CUSTOM_ID: abelian-group
:END:

#+INCLUDE: "../notes/20231007164540-abelian_group.org"
    

** Algebraic Models For Accounting Systems
:PROPERTIES:
:EXPORT_FILE_NAME: algebraic-models-for-accounting-systems
:EXPORT_DATE: 2023-10-05
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug algebraic-models-for-accounting-systems
:CUSTOM_ID: algebraic-models-for-accounting-systems
:END:

#+INCLUDE: "../notes/20231005194145-algebraic_models_for_accounting_systems.org"
    

** Managing A Programming Project
:PROPERTIES:
:EXPORT_FILE_NAME: managing-a-programming-project
:EXPORT_DATE: 2023-04-11
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug managing-a-programming-project
:CUSTOM_ID: managing-a-programming-project
:END:

#+INCLUDE: "../notes/20230411100120-managing_a_programming_project.org"
    

** Mandarin Chinese
:PROPERTIES:
:EXPORT_FILE_NAME: mandarin-chinese
:EXPORT_DATE: 2022-02-04
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug mandarin-chinese
:CUSTOM_ID: mandarin-chinese
:END:

#+INCLUDE: "../notes/20220204231800-mandarin_chinese.org"
    

** Kubernetes Ingress
:PROPERTIES:
:EXPORT_FILE_NAME: kubernetes-ingress
:EXPORT_DATE: 2021-12-08
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug kubernetes-ingress
:CUSTOM_ID: kubernetes-ingress
:END:

#+INCLUDE: "../notes/20211208202505-kubernetes_ingress.org"
    

** Distributed Systems
:PROPERTIES:
:EXPORT_FILE_NAME: distributed-systems
:EXPORT_DATE: 2021-12-02
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug distributed-systems
:CUSTOM_ID: distributed-systems
:END:

#+INCLUDE: "../notes/20211202213813-distributed_systems.org"
    

** Gitops
:PROPERTIES:
:EXPORT_FILE_NAME: gitops
:EXPORT_DATE: 2021-12-01
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug gitops
:CUSTOM_ID: gitops
:END:

#+INCLUDE: "../notes/20211201115324-gitops.org"
    

** Kubernetes Secrets
:PROPERTIES:
:EXPORT_FILE_NAME: kubernetes-secrets
:EXPORT_DATE: 2021-11-08
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug kubernetes-secrets
:CUSTOM_ID: kubernetes-secrets
:END:

#+INCLUDE: "../notes/20211108165331-kubernetes_secrets.org"
    

** The Effective Manager
:PROPERTIES:
:EXPORT_FILE_NAME: the-effective-manager
:EXPORT_DATE: 2021-11-07
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug the-effective-manager
:CUSTOM_ID: the-effective-manager
:END:

#+INCLUDE: "../notes/20211107141903-the_effective_manager.org"
    

** History Of Logic
:PROPERTIES:
:EXPORT_FILE_NAME: history-of-logic
:EXPORT_DATE: 2021-11-04
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug history-of-logic
:CUSTOM_ID: history-of-logic
:END:

#+INCLUDE: "../notes/20211104221056-history_of_logic.org"
    

** Kubernetes Configmaps
:PROPERTIES:
:EXPORT_FILE_NAME: kubernetes-configmaps
:EXPORT_DATE: 2021-11-03
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug kubernetes-configmaps
:CUSTOM_ID: kubernetes-configmaps
:END:

#+INCLUDE: "../notes/20211103202637-kubernetes_configmaps.org"
    

** Kubernetes Storage
:PROPERTIES:
:EXPORT_FILE_NAME: kubernetes-storage
:EXPORT_DATE: 2021-11-03
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug kubernetes-storage
:CUSTOM_ID: kubernetes-storage
:END:

#+INCLUDE: "../notes/20211103110648-kubernetes_storage.org"
    

** Dns
:PROPERTIES:
:EXPORT_FILE_NAME: dns
:EXPORT_DATE: 2021-10-29
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug dns
:CUSTOM_ID: dns
:END:

#+INCLUDE: "../notes/20211029092528-dns.org"
    

** Helm
:PROPERTIES:
:EXPORT_FILE_NAME: helm
:EXPORT_DATE: 2021-10-23
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug helm
:CUSTOM_ID: helm
:END:

#+INCLUDE: "../notes/20211023140908-helm.org"
    

** Kubectl
:PROPERTIES:
:EXPORT_FILE_NAME: kubectl
:EXPORT_DATE: 2021-10-13
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug kubectl
:CUSTOM_ID: kubectl
:END:

#+INCLUDE: "../notes/20211013230422-kubectl.org"
    

** Kubernetes
:PROPERTIES:
:EXPORT_FILE_NAME: kubernetes
:EXPORT_DATE: 2021-10-12
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug kubernetes
:CUSTOM_ID: kubernetes
:END:

#+INCLUDE: "../notes/20211012215602-kubernetes.org"
    
