:PROPERTIES:
:ID:       a3e972e0-8db9-4556-9dca-0e4f6a663236
:END:
#+title: Monad
#+HUGO_CATEGORIES: "Category Theory" "Functional Programming"
#+HUGO_TAGS: "Haskell"

** Haskell
In [[id:a74d6aac-dbe9-48a6-83ca-648cd6ea933e][Haskell]], monads are defined as:

#+BEGIN_SRC haskell
    class Monad m where
        (>>=)  :: m a -> (  a -> m b) -> m b
        (>>)   :: m a ->  m b         -> m b
        return ::   a                 -> m a
#+END_SRC

| Name   | Handles                | Signature                                     |
|--------+------------------------+-----------------------------------------------|
| Result | Errors                 | ~Either e a -> (a -> Either e b) -> Either e b~ |
| Maybe  | Absent values          | ~Maybe a -> (a -> Maybe b) -> Maybe b~          |
| IO     | Pure/Impure separation | ~IO a -> (a -> IO b) -> IO b~                   |
| State  | Monadic State          | ~State a -> (a -> State b) -> State b~          |
| Reader | Environment Data       | ~Reader a -> (a -> Reader b) -> Reader b~       |
| Writer | Writer-Only Data       | ~Writer a -> (a -> Writer b) -> Writer b~       |
| Parser | Composing Parsers      | ~Parser a -> (a -> Parser b) -> Parser b~     |



