:PROPERTIES:
:ID:       1daea4ea-40bc-406d-8d03-906c7f9ec343
:EXPORT_HUGO_CATEGORIES: "FP"
:EXPORT_HUGO_TAGS: "Erlang"
:END:
#+TITLE: Programming Erlang

Notes from [cite:@armstrong2013].

[[id:de7d0e94-618f-4982-b3e5-8806d88cad5d][Erlang]]

* Part II: Sequential Programming

** Error Handling in Sequential Programs

#+BEGIN_SRC erlang
  try FuncOrExpressionSeq of
    Pattern1 [when Guard1] -> Expressions1;
    Pattern2 [when Guard2] -> Expressions2;
    ...
  catch
    ExceptionType1: ExPattern1 [when ExGuard1] -> ExExpressions1;
    ExceptionType2: ExPattern2 [when ExGuard2] -> ExExpressions2;
    ...
  after
    AfterExpressions
  end
#+END_SRC

+ ~exit/1~ :: Used to terminate the current process.
+ ~throw~ :: Used as a documentation to the caller, to show that a function might throw this exception. 
+ error :: Crashing errors.

*** Fail Fast and Noisily, Fail Politely

#+BEGIN_QUOTE
In Erlang, when an error is detected internally by the system or is detected by
program logic, the correct approach is to crash immediately and generate a
meaningful error message.

(...)

Second, fail politely means that only the programmer should see the detailed
error messages produced when a program crashes. A user of the program should
never see these messages.
#+END_QUOTE

** Binaries and the Bit Syntax
