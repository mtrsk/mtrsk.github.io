<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>homepage title on Benevides&#39; Blog</title>
    <link>https://mtrsk.github.io/</link>
    <description>Recent content in homepage title on Benevides&#39; Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mtrsk.github.io/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nixos</title>
      <link>https://mtrsk.github.io/notes/2024/nixos/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/nixos/</guid>
      <description>:ID: c350b99c-021d-4f5a-a948-4929056e1267&#xA;NixOS is a [BROKEN LINK: 8a427ee7-2ef1-489b-af82-91de7be8a3ba] distribution based on the purely functional package management system [BROKEN LINK: 72d705ae-9f5c-402b-88e5-21744277319a].</description>
    </item>
    <item>
      <title>Dializer</title>
      <link>https://mtrsk.github.io/notes/2024/dializer/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/dializer/</guid>
      <description>:ID: 228628b7-14cf-41cb-bc39-018a4ff2325f&#xA;Dialyzer is a static analysis tool that identifies software discrepancies, such as definite type errors, code that is unreachable because of programming errors, and unnecessary tests in [BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d] and [BROKEN LINK: 8d568d81-9c22-4d94-81b2-27a2d730ba98] modules or an entire codebases.</description>
    </item>
    <item>
      <title>Elixir</title>
      <link>https://mtrsk.github.io/notes/2024/elixir/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/elixir/</guid>
      <description>:ID: 8d568d81-9c22-4d94-81b2-27a2d730ba98 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;FP&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;Elixir&amp;rdquo;&#xA;Elixir describes itself as a functional, meta-programming-aware language built on top of the [BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d] virtual machine.&#xA;Basics Protocols </description>
    </item>
    <item>
      <title>Erlang Shell</title>
      <link>https://mtrsk.github.io/notes/2024/erlang-shell/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/erlang-shell/</guid>
      <description>:ID: bcd04f60-0a4c-4213-90f7-139c0ddf5bef&#xA;Some features of the [BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d] shell.&#xA;Examples Compiling and Running &amp;ldquo;Hello World&amp;rdquo; in the Shell -module(hello). -export([start/0]). start() -&amp;gt; io:format(&amp;#34;Hello world~n&amp;#34;). Running the hello.erl program in the erlang shell.&#xA;$ erl Erlang/OTP 26 [erts-14.2.5] [source] [64-bit] [smp:24:24] [ds:24:24:10] [async-threads:1] [jit:ns] Eshell V14.2.5 (press Ctrl+G to abort, type help(). for help) 1&amp;gt; c(hello). {ok,hello} 2&amp;gt; hello:start(). Hello world ok Compiling Outside the Erlang Shell $ erlc hello.erl $ erl -noshell -s hello start -s init stop erlc evokes the Erlang compiler from the command line.</description>
    </item>
    <item>
      <title>Error Handling In Erlang</title>
      <link>https://mtrsk.github.io/notes/2024/error-handling-in-erlang/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/error-handling-in-erlang/</guid>
      <description>:ID: 22ae9c25-3123-4ed8-b765-369ac89d2942&#xA;In [BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d] we have a large number of processes at our disposal, so the failure of any individual process is not so important. We usually write only a small amount of defensive code and instead concentrate on writing corrective code. We take measures to detect the errors and then correct them after they have occurred. (Armstrong 2013)&#xA;Definitions Link A bi-directional propagation path for exit signals. Exit Signal Transmit process termination information.</description>
    </item>
    <item>
      <title>Postgres Server</title>
      <link>https://mtrsk.github.io/notes/2024/postgres-server/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/postgres-server/</guid>
      <description>:ID: ae205cab-10ea-4cff-9051-fef9021638b6 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Databases&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;SQL&amp;rdquo; &amp;ldquo;Postgres&amp;rdquo;&#xA;Locating the database server files [BROKEN LINK: 1949c98e-e1c0-474b-b383-c76aa418d583] Database server files are initially stored in a location referred to as data directory:&#xA;SHOW data_directory; </description>
    </item>
    <item>
      <title>Scsi</title>
      <link>https://mtrsk.github.io/notes/2024/scsi/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/scsi/</guid>
      <description>:ID: 388e1a43-f7f6-4c9e-af19-d7b6116a070e</description>
    </item>
    <item>
      <title>Concurrent Erlang</title>
      <link>https://mtrsk.github.io/notes/2024/concurrent-erlang/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/concurrent-erlang/</guid>
      <description>:ID: 63607e63-4428-4578-bf2a-12a49649b49c :ROAM_ALIAS: &amp;ldquo;Erlang Process&amp;rdquo;&#xA;Processes In [BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d], creation of a parallel process is achieved by evaluating the spawn primitive. This primitive creates a concurrent process and returns a process identifier (PID) that can used to interact with the newly created process:&#xA;Pid = spawn(ModName, FuncName, [Arg1, Arg2, ..., ArgN]). This BIF never fails A process can either terminate: Abormally when run-time errors occur Normally when there is no more code to execute Modeling Concurrency The syntax Pid !</description>
    </item>
    <item>
      <title>Otp</title>
      <link>https://mtrsk.github.io/notes/2024/otp/</link>
      <pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/otp/</guid>
      <description>:ID: 6ed3a191-0128-453e-b0b6-37c48593a6f0 :ROAM_ALIAS: &amp;ldquo;Open Telecom Platform&amp;rdquo;&#xA;[BROKEN LINK: 6ed3a191-0128-453e-b0b6-37c48593a6f0] is a domain-independent set of frameworks, principles, and patterns that guide and support the structure, design, implementation, and deployment of [BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d] systems. Using OTP in your projects will help you avoid accidental complexity: things that are difficult because you picked inadequate tools. (Cesarini and Vinoski 2016, 20)</description>
    </item>
    <item>
      <title>Split Brain</title>
      <link>https://mtrsk.github.io/notes/2024/split-brain/</link>
      <pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/split-brain/</guid>
      <description>:ID: 582a4090-eb66-4dfd-8166-9acd3c97dcc9&#xA;Split brain means that the [BROKEN LINK: d8a1a1ff-47e6-44bc-a627-83ca8dc61ecb] is split in two (or more) parts, but both parts think they are the only remaining part of the cluster. This can lead to very bad situations when both parts of the cluster try to host the resources that are offered by the cluster. If the resource is a file system, and multiple nodes try to write to the file system simultaneously and without coordination, it may lead to corruption of the file system and the loss of data.</description>
    </item>
    <item>
      <title>Sql</title>
      <link>https://mtrsk.github.io/notes/2024/sql/</link>
      <pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/sql/</guid>
      <description>:ID: 11f7d9cc-51a6-4897-955b-37a756105677 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Databases&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;SQL&amp;rdquo;&#xA;Logical Query Processing Order FROM JOIN Step Description 1 Cartesian product 2 Qualification step (i.e. the ON filter) 3 LEFT or RIGHT reservations If the specified JOIN type is a CROSS JOIN, then the query planner stops at Step 1 and return the cartesian product to the next clause. All other join types proceed to the qualification step.&#xA;INNER and OUTER JOINS are called &amp;ldquo;qualified JOINs&amp;rdquo;, the qualification predicated is specified using the ON keyword, which filters all rows from the previous cartesian step where the predicate is TRUE.</description>
    </item>
    <item>
      <title>Clusters</title>
      <link>https://mtrsk.github.io/notes/2024/clusters/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/clusters/</guid>
      <description>:ID: d8a1a1ff-47e6-44bc-a627-83ca8dc61ecb&#xA;Different Kinds of Clusters High Availability Clusters The goal of a high availability cluster is to make sure that critical resources reach the maximum possible availability. This goal is accomplished by installing cluster software on multiple servers. This software monitors the availability of the cluster nodes, and it monitors the availability of the services that are managed by the cluster. If a server goes down, or if the resource stops, the HA cluster will notice and make sure that the resource is restarted somewhere else in the cluster, so that it can be used again after a minimal interruption.</description>
    </item>
    <item>
      <title>Stonith</title>
      <link>https://mtrsk.github.io/notes/2024/stonith/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/stonith/</guid>
      <description>:ID: 789326a5-20aa-4492-acb6-1474c3c11a4a :ROAM_ALIASES: Fencing&#xA;In STONITH, specific hardware is used to terminate a node that is no longer responsive to the cluster. The idea behind STONITH is that before migrating resources to another node in the cluster, the cluster has to confirm that the node in question really is down. To do this, the cluster will send a shutdown action to the STONITH device, which will, in turn, terminate the nonresponsive node.</description>
    </item>
    <item>
      <title>Quorum</title>
      <link>https://mtrsk.github.io/notes/2024/quorum/</link>
      <pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/quorum/</guid>
      <description>:ID: 42950824-228d-48d6-abec-4e18908dfca0 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;DistributedSystems&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;Clusters&amp;rdquo;&#xA;Quorum means &amp;ldquo;majority&amp;rdquo;, and the idea behind quorum is easy to understand: if the [BROKEN LINK: d8a1a1ff-47e6-44bc-a627-83ca8dc61ecb] doesn’t have quorum, no actions will be taken in the cluster. This by itself would offer a good solution to avoid the [BROKEN LINK: 582a4090-eb66-4dfd-8166-9acd3c97dcc9] problem.&#xA;But to make sure that it can never happen, that multiple nodes activate the same resources in the cluster, another mechanism is used as well.</description>
    </item>
    <item>
      <title>Drbd</title>
      <link>https://mtrsk.github.io/notes/2024/drbd/</link>
      <pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/drbd/</guid>
      <description>:ID: 694d20ba-bdb5-419d-ae9d-0dc73c695333 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;OS&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;Linux&amp;rdquo;&#xA;Distributed Replicated Block Device (DRBD) is a distributed replicated storage system for the [BROKEN LINK: 8a427ee7-2ef1-489b-af82-91de7be8a3ba] platform.</description>
    </item>
    <item>
      <title>Iscsi</title>
      <link>https://mtrsk.github.io/notes/2024/iscsi/</link>
      <pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/iscsi/</guid>
      <description>:ID: 3a7a03ae-8932-4d86-ae45-aa84ff1f325a :ROAM_ALIASES: iSCSI&#xA;Definition iSCSI an acronym for Internet Small Computer Systems Interface, an Internet Protocol (IP)-based storage networking standard for linking data storage facilities. It provides block-level access to storage devices by carrying [BROKEN LINK: 388e1a43-f7f6-4c9e-af19-d7b6116a070e] commands over a TCP/IP network.</description>
    </item>
    <item>
      <title>Linux</title>
      <link>https://mtrsk.github.io/notes/2024/linux/</link>
      <pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/linux/</guid>
      <description>:ID: 8a427ee7-2ef1-489b-af82-91de7be8a3ba</description>
    </item>
    <item>
      <title>Sequential Erlang</title>
      <link>https://mtrsk.github.io/notes/2024/sequential-erlang/</link>
      <pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/sequential-erlang/</guid>
      <description>:ID: f0da3356-3797-4ddc-8306-cd333f159754&#xA;The basic constructs of the [BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d] language.&#xA;Datatypes Integers Large Integers are converted to bignums If you need to do calculations on integers using a base other than 10, you can use Base#Value notation. (Laurent 2017, 7)&#xA;Floats When you divide two integers with /, the result is automatically converted to a floating-point number. Integer division is handled by div and rem. Atoms In Erlang, atoms are used to represent constant values.</description>
    </item>
    <item>
      <title>Postgres Window Functions</title>
      <link>https://mtrsk.github.io/notes/2024/postgres-window-functions/</link>
      <pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/postgres-window-functions/</guid>
      <description>:ID: 860f97f8-e41d-480b-881b-203773406990&#xA;Aggregates ROW_NUMBER LEAD The LEAD() function is used to retrieve data from the next row.&#xA;LAG The LAG() function is used to retrieve data from the previous row.&#xA;Rankings Rank Dense Rank Value Functions </description>
    </item>
    <item>
      <title>Nix</title>
      <link>https://mtrsk.github.io/notes/2024/nix/</link>
      <pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/nix/</guid>
      <description>:ID: 72d705ae-9f5c-402b-88e5-21744277319a&#xA;References </description>
    </item>
    <item>
      <title>Nixos Modules</title>
      <link>https://mtrsk.github.io/notes/2024/nixos-modules/</link>
      <pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/nixos-modules/</guid>
      <description>:ID: 01b79396-e6d4-4673-9438-95a120543f05&#xA;A module is a file containing a [BROKEN LINK: 72d705ae-9f5c-402b-88e5-21744277319a] expression with a specific structure. It declares options for other modules to define (give a value). It processes them and defines options declared in other modules.&#xA;Basics A module is a function that takes an attrset and returns an attrset. It may declare options. It may define option values. When evaluated, it produces a configuration based on the declarations and definitions.</description>
    </item>
    <item>
      <title>Postgres Ctes</title>
      <link>https://mtrsk.github.io/notes/2024/postgres-ctes/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/postgres-ctes/</guid>
      <description>:ID: 36f5efb2-34da-4d67-8c37-bbd5429d7b55 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Databases&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;SQL&amp;rdquo; &amp;ldquo;Postgres&amp;rdquo;&#xA;Common Table Expressions Recursive </description>
    </item>
    <item>
      <title>Postgres Functions</title>
      <link>https://mtrsk.github.io/notes/2024/postgres-functions/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/postgres-functions/</guid>
      <description>:ID: 32e8ab3c-2b96-410f-b60d-fde9e35b49f3 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Databases&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;SQL&amp;rdquo; &amp;ldquo;Postgres&amp;rdquo;&#xA;Functions CREATE OR REPLACE FUNCTION function_name(arg1 INT, arg2 INT, arg3 INT) RETURNS SETOF VARCHAR LANGUAGE plpgsql AS $$ BEGIN (...) END; $$; References </description>
    </item>
    <item>
      <title>Postgres Indexes</title>
      <link>https://mtrsk.github.io/notes/2024/postgres-indexes/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/postgres-indexes/</guid>
      <description>:ID: 48dd781f-123c-4508-82b5-ac9b05383db4 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Databases&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;SQL&amp;rdquo; &amp;ldquo;Postgres&amp;rdquo;</description>
    </item>
    <item>
      <title>Postgres Subqueries</title>
      <link>https://mtrsk.github.io/notes/2024/postgres-subqueries/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/postgres-subqueries/</guid>
      <description>:ID: 60f014f9-8a82-43b8-ae13-dee68b9470bf :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Databases&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;SQL&amp;rdquo; &amp;ldquo;Postgres&amp;rdquo;&#xA;Subqueries as Expressions Scalar Subquery Results in a single row&#xA;Multi-Row Subquery Results in multiple rows, tipically used in the where clause with operators such as IN, NOT, EXISTS, ANY and ALL.&#xA;Correlated Subquery A uncorrelated sub-query is a type of sub-query where the inner query doesn’t depend upon the outer query for its execution.&#xA;Uncorrelated Subquery A correlated sub-query is a type of query where the inner query depends upon the outcome of the outer query in order to perform its execution.</description>
    </item>
    <item>
      <title>You Have 10 Seconds To Nixify Your Dotnet Project</title>
      <link>https://mtrsk.github.io/blog/2024/you-have-10-seconds-to-nixify-your-dotnet-project/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/blog/2024/you-have-10-seconds-to-nixify-your-dotnet-project/</guid>
      <description>Figure 1: Don &amp;ldquo;The Gun&amp;rdquo; Syme, now officially part of the &amp;ldquo;Nix Gang&amp;rdquo;.&#xA;While this is a click bait title (maybe I&amp;rsquo;ve also farmed some zoomer credits out the OC), I&amp;rsquo;m pretty sure that&amp;rsquo;s how Don Syme feels when looks at a Result type like Result&amp;lt;&#39;T,string&amp;gt; in an F# codebase. The reason why I&amp;rsquo;ve written this post is that I started doing changes in a open source project I develop/maintain, and realized other .</description>
    </item>
    <item>
      <title>Experiments With Erlang And Nix</title>
      <link>https://mtrsk.github.io/blog/2024/experiments-with-erlang-and-nix/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/blog/2024/experiments-with-erlang-and-nix/</guid>
      <description>Recently I&amp;rsquo;ve been collaborating with friends on Lyceum, an MMO game with an Erlang backend and a Zig + Raylib client (as if erlang wasn&amp;rsquo;t a weird enough of a choice). Now, this is an unusual combination, but that&amp;rsquo;s the whole reason our pesky group exists in the first place (if you want to know more check my friend&amp;rsquo;s Lemos post).&#xA;There is also a couple of standards we try to follow when doing this project, all of the team works with microservices all day in their normal jobs, so whenever we want to do something we try follow some simple rules:</description>
    </item>
    <item>
      <title>Postgres</title>
      <link>https://mtrsk.github.io/notes/2024/postgres/</link>
      <pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/postgres/</guid>
      <description>:ID: 1949c98e-e1c0-474b-b383-c76aa418d583 :ROAM_ALIAS: &amp;ldquo;PostgreSQL&amp;rdquo;&#xA;PostgreSQL also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and [BROKEN LINK: 11f7d9cc-51a6-4897-955b-37a756105677] compliance.&#xA;[BROKEN LINK: 36f5efb2-34da-4d67-8c37-bbd5429d7b55] [BROKEN LINK: 32e8ab3c-2b96-410f-b60d-fde9e35b49f3] [BROKEN LINK: 48dd781f-123c-4508-82b5-ac9b05383db4] [BROKEN LINK: 60f014f9-8a82-43b8-ae13-dee68b9470bf] [BROKEN LINK: 860f97f8-e41d-480b-881b-203773406990] </description>
    </item>
    <item>
      <title>Byzantine Generals Problem</title>
      <link>https://mtrsk.github.io/notes/2024/byzantine-generals-problem/</link>
      <pubDate>Fri, 16 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/byzantine-generals-problem/</guid>
      <description>:ID: 68219535-efeb-4835-9670-fd2747376cf3&#xA;A summary from (Lamport, Shostak, and Pease 2019) paper.&#xA;Introduction A reliable computer system must be able to cope with the failure of one or more of its components. A failed component may exhibit a type of behavior that is often overlooked namely, sending conflicting information to different parts of the system. The problem of coping with this type of failure is expressed abstractly as the Byzantine Generals Problem.</description>
    </item>
    <item>
      <title>Type Driven Development</title>
      <link>https://mtrsk.github.io/notes/2024/type-driven-development/</link>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/type-driven-development/</guid>
      <description>:ID: 794f5acf-354c-49bf-943f-33480ade38f2&#xA;References: (Brady 2017) </description>
    </item>
    <item>
      <title>Cap Theorem</title>
      <link>https://mtrsk.github.io/notes/2024/cap-theorem/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/cap-theorem/</guid>
      <description>:ID: 74c5509d-73be-4b04-9ca4-039117d588a9&#xA;First postulated by Eric Brewer in (Brewer 2000), and formally proved in (Gilbert and Lynch 2002).&#xA;Definitions For (Brewer 2000), a distributed system has some very specific properties and behaviour, being a collected set of Nodes that all share data. A limitation of such systems happens when a write request is followed by a read request.&#xA;┌────────┐ │ Client │ └────────┘ [R] ^ | [W] | v ┌−−−−−−−−−−−−−−−−−−−−−−−−−┐ ╎ System ╎ ╎ ┌────┐ ╎ ╎ ┌──────────│ a0 │──┐ ╎ ╎ │ └────┘ │ ╎ ╎ │ │ │ ╎ ╎ ┌────┐ ┌────┐ │ ╎ ╎ │ a3 │───────│ a1 │ │ ╎ ╎ └────┘ └────┘ │ ╎ ╎ │ │ ╎ ╎ ┌────┐ │ ╎ ╎ │ a2 │──┘ ╎ ╎ └────┘ ╎ └−−−−−−−−−−−−−−−−−−−−−−−−−┘ Read Write A client can read data from the system by talking to any Node A client can write data to the system by talking to any Node The Theorem states that for any given pair of requests this kind of system can only guarantee two out of three properties:</description>
    </item>
    <item>
      <title>Designing For Scalability With Erlang</title>
      <link>https://mtrsk.github.io/notes/2024/designing-for-scalability-with-erlang/</link>
      <pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/designing-for-scalability-with-erlang/</guid>
      <description>:ID: ffac18bd-4e44-4a7b-8a3a-a85552c9b076&#xA;[BROKEN LINK: 6ed3a191-0128-453e-b0b6-37c48593a6f0] is said to consist of three building blocks that, when used together, provide a solid approach to designing and developing systems in the problem domain we’ve just described. They are [BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d] itself, tools and libraries, and a set of design principles. (Cesarini and Vinoski 2016, 20)</description>
    </item>
    <item>
      <title>Programming Erlang</title>
      <link>https://mtrsk.github.io/notes/2024/programming-erlang/</link>
      <pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/programming-erlang/</guid>
      <description>:ID: 1daea4ea-40bc-406d-8d03-906c7f9ec343 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;FP&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;Erlang&amp;rdquo;&#xA;Notes from (Armstrong 2013).&#xA;[BROKEN LINK: de7d0e94-618f-4982-b3e5-8806d88cad5d]&#xA;Part II: Sequential Programming Error Handling in Sequential Programs try FuncOrExpressionSeq of Pattern1 [when Guard1] -&amp;gt; Expressions1; Pattern2 [when Guard2] -&amp;gt; Expressions2; ... catch ExceptionType1: ExPattern1 [when ExGuard1] -&amp;gt; ExExpressions1; ExceptionType2: ExPattern2 [when ExGuard2] -&amp;gt; ExExpressions2; ... after AfterExpressions end exit/1 Used to terminate the current process. throw Used as a documentation to the caller, to show that a function might throw this exception.</description>
    </item>
    <item>
      <title>Erlang</title>
      <link>https://mtrsk.github.io/notes/2024/erlang/</link>
      <pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/erlang/</guid>
      <description>:ID: de7d0e94-618f-4982-b3e5-8806d88cad5d&#xA;Resources:&#xA;Etudes for Erlang Joe Armstrong&amp;rsquo;s PHD thesis The Erlang view of the world can be summarized in the following statments (Armstrong 2003):&#xA;Everything is a process. Processes are strongly isolated. Process creation and destruction is a lightweight operation. Message passing is the only way for processes to interact. Processes have unique names. If you know the name of a process you can send it a message. Error handling is non-local.</description>
    </item>
    <item>
      <title>Monad</title>
      <link>https://mtrsk.github.io/notes/2024/monad/</link>
      <pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2024/monad/</guid>
      <description>:ID: a3e972e0-8db9-4556-9dca-0e4f6a663236&#xA;Haskell class Monad m where (&amp;gt;&amp;gt;=) :: m a -&amp;gt; ( a -&amp;gt; m b) -&amp;gt; m b (&amp;gt;&amp;gt;) :: m a -&amp;gt; m b -&amp;gt; m b return :: a -&amp;gt; m a Name Handles Signature Result Errors Either e a -&amp;gt; (a -&amp;gt; Either e b) -&amp;gt; Either e b Maybe Absent values Maybe a -&amp;gt; (a -&amp;gt; Maybe b) -&amp;gt; Maybe b IO Pure/Impure separation IO a -&amp;gt; (a -&amp;gt; IO b) -&amp;gt; IO b State Monadic State State a -&amp;gt; (a -&amp;gt; State b) -&amp;gt; State b Reader Environment Data Reader a -&amp;gt; (a -&amp;gt; Reader b) -&amp;gt; Reader b Writer Writer-Only Data Writer a -&amp;gt; (a -&amp;gt; Writer b) -&amp;gt; Writer b Parser Composing Parsers Parser a -&amp;gt; (a -&amp;gt; Parser b) -&amp;gt; Parser b </description>
    </item>
    <item>
      <title>Architectural Styles And The Design Of Network Based Software Architectures</title>
      <link>https://mtrsk.github.io/notes/2023/architectural-styles-and-the-design-of-network-based-software-architectures/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/architectural-styles-and-the-design-of-network-based-software-architectures/</guid>
      <description>:ID: f922bff8-f1ab-4322-a0af-b6eba02b2811&#xA;In 2000, Roy Fielding, then at U.C. Irvine, published a seminal PhD dissertation on the web: &amp;ldquo;Architectural Styles and the Design of Network-based Software Architectures.&amp;rdquo; Fielding had been working on the open source Apache HTTP Server and his thesis was a description of what he felt was a new and distinct networking architecture that had emerged in the early web. Fielding had worked on the initial HTTP specifications and, in the paper, defined the web’s hypermedia network model using the term REpresentational State Transfer (REST).</description>
    </item>
    <item>
      <title>As We May Think</title>
      <link>https://mtrsk.github.io/notes/2023/as-we-may-think/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/as-we-may-think/</guid>
      <description>:ID: 22759a84-3a09-464f-b0f7-e5d0a7bf5295&#xA;In this article Bush described a device called a Memex, which, using a complex mechanical system of reels and microfilm, along with an encoding system, would allow users to jump between related frames of content. The Memex was never actually implemented, but it was an inspiration for later work on the idea of Hypermedia.</description>
    </item>
    <item>
      <title>The Mother Of All Demos</title>
      <link>https://mtrsk.github.io/notes/2023/the-mother-of-all-demos/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/the-mother-of-all-demos/</guid>
      <description>:ID: 116d7265-e46f-4b42-b5ef-af1e913e2c12&#xA;Englebart demonstrated an unbelievable amount of technology:&#xA;Remote, collaborative text editing with his peers in Menlo Park Video and audio chat An integrated windowing system, with window resizing, etc A recognizable hypertext, whereby clicking on underlined text navigated to new content Despite receiving a standing ovation from a shocked audience after his talk, it was decades before the technologies Englebart demonstrated became mainstream.</description>
    </item>
    <item>
      <title>Hypermediasystems</title>
      <link>https://mtrsk.github.io/notes/2023/hypermediasystems/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/hypermediasystems/</guid>
      <description>:ID: 10d70300-3c11-48f7-af3b-d5d07d5a5f39&#xA;Chapter 01 - Hypermedia: A Reintroduction What Is Hypermedia? Hypermedia is a media, for example a text, that includes non-linear branching from one location in the media to another, via, for example, hyperlinks embedded in the media.&#xA;A Brief History of Hypermedia Where did the idea of hypermedia come from?&#xA;The 1945 article [BROKEN LINK: 22759a84-3a09-464f-b0f7-e5d0a7bf5295], from Vanevar Bush Ted Nelson&amp;rsquo;s work on the &amp;ldquo;Hypertext Editing System&amp;rdquo; at Brown University and who later created the File Retrieval and Editing System (FRESS) Douglas Engelbart&amp;rsquo;s thesis on the &amp;ldquo;[BROKEN LINK: 116d7265-e46f-4b42-b5ef-af1e913e2c12]&amp;rdquo; Modern Implementation Tim Berners-Lee&amp;rsquo;s &amp;ldquo;World Wide Web&amp;rdquo; Roy Fielding&amp;rsquo;s &amp;ldquo;[BROKEN LINK: f922bff8-f1ab-4322-a0af-b6eba02b2811]&amp;rdquo; The World’s Most Successful Hypertext: HTML The Essence of HTML as a Hypermedia Anchor tags</description>
    </item>
    <item>
      <title>Monoid</title>
      <link>https://mtrsk.github.io/notes/2023/monoid/</link>
      <pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/monoid/</guid>
      <description>:ID: d89285be-d7a9-46a1-8a10-e14e73b66935 :EXPORT_HUGO_CATEGORIES: &amp;ldquo;Math&amp;rdquo; &amp;ldquo;FP&amp;rdquo; :EXPORT_HUGO_TAGS: &amp;ldquo;Algebra&amp;rdquo; &amp;ldquo;Haskell&amp;rdquo;&#xA;Definition A monoid is triple \(\left (\mathbb{M}, \cdot, 1 \right)\) such that:&#xA;\(\mathbb{M}\) is an non-empty set \(\cdot : \mathbb{M} \times \mathbb{M} \rightarrow \mathbb{M}\) is an associative mapping, i.e., \(\forall t_1, t_2, t_3 \in \mathbb{M}, (t_1 \cdot t_2) \cdot t_3 = t_1 \cdot (t_2 \cdot t_3)\). \(1 \in \mathbb{M}\) is the unit satisfying \(1 \cdot t = t = t \cdot 1, \forall t \in \mathbb{M}\).</description>
    </item>
    <item>
      <title>Abelian Group</title>
      <link>https://mtrsk.github.io/notes/2023/abelian-group/</link>
      <pubDate>Sat, 07 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/abelian-group/</guid>
      <description>:ID: 6550857e-ec3f-4b76-80ce-9b86df92601e</description>
    </item>
    <item>
      <title>Commutative Ring</title>
      <link>https://mtrsk.github.io/notes/2023/commutative-ring/</link>
      <pubDate>Sat, 07 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/commutative-ring/</guid>
      <description>:ID: 44839048-b783-4a37-9267-b8e59160d90f</description>
    </item>
    <item>
      <title>Left R Module</title>
      <link>https://mtrsk.github.io/notes/2023/left-r-module/</link>
      <pubDate>Sat, 07 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/left-r-module/</guid>
      <description>:ID: e4bd8f7b-a64d-4da3-b1e8-289d6fb0c441&#xA;Formal Definition Suppose that R is a ring, and 1 is its multiplicative identity. A left R-module M consists of an abelian group (M, +) and an operation · : R × M → M such that ∀ r, s ∈ R and x, y ∈ M, we have:&#xA;\begin{align*} r \cdot (x + y) &amp;amp;= r \cdot x + r \cdot y \tag{1}\\ (r + s) \cdot x &amp;amp;= r \cdot x + s \cdot x \tag{2}\\ (r \cdot s) \cdot x &amp;amp;= r \cdot (s \cdot x) \tag{3}\\ 1 \cdot x &amp;amp;= x \tag{4} \end{align*}</description>
    </item>
    <item>
      <title>R Module Homomorphism</title>
      <link>https://mtrsk.github.io/notes/2023/r-module-homomorphism/</link>
      <pubDate>Sat, 07 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/r-module-homomorphism/</guid>
      <description>:ID: e41608f8-fcf2-4b02-b502-9441c0aee369</description>
    </item>
    <item>
      <title>Algebraic Models For Accounting Systems</title>
      <link>https://mtrsk.github.io/notes/2023/algebraic-models-for-accounting-systems/</link>
      <pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/algebraic-models-for-accounting-systems/</guid>
      <description>:ID: 9a03d556-ded4-4096-9a8c-c2147dee70a5&#xA;Algebraic Models for Accouting Systems&#xA;Approaches to Accounting Theory Algebraic concepts employed Balance vectors&#xA;A balance vector is a column vector or column matrix the sum of whose entries equals zero. Balance vectors are able to represent the state of an accounting system at any instant. They are also capable of encoding the transactions that are applied to the system. Digraph&#xA;The vertices represent accounts and the edges indicate where there are flows of value within the system.</description>
    </item>
    <item>
      <title>How To Use Private Neovim Plugins On Nixos</title>
      <link>https://mtrsk.github.io/blog/2023/how-to-use-private-neovim-plugins-on-nixos/</link>
      <pubDate>Sun, 17 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/blog/2023/how-to-use-private-neovim-plugins-on-nixos/</guid>
      <description>Over time my config changed a lot since the early days, as of now I&amp;rsquo;m using a combination of Flakes and home-manager to manage my workstations. I try not to overthink too much when it comes to Nix, my current Neovim setup is pretty simple, lua-based, yet, fully nixified.&#xA;dotfiles ├── (...) ├── nvim │ ├── files.lua │ ├── line.lua │ ├── lsp.lua │ ├── settings.lua │ ├── tabs.lua │ └── treesitter.</description>
    </item>
    <item>
      <title>Managing A Programming Project</title>
      <link>https://mtrsk.github.io/notes/2023/managing-a-programming-project/</link>
      <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2023/managing-a-programming-project/</guid>
      <description>:ID: da4d5031-66cb-4d1c-b8cf-24d12adf5c17&#xA;Introduction Your ground rules Adopt a set of unambiguous definitions and stick with them Define your project&amp;rsquo;s development cycle and related all schedules and work process to that cycle Define activities, such as levels of testing, in a consistent way Define a system of documents clearly, consistent and early Your contract Half the horror stories about programming involve either bad contracts or no contract at all&#xA;The fact that you are managing a programming project means that you will be running a business.</description>
    </item>
    <item>
      <title>Mandarin Chinese</title>
      <link>https://mtrsk.github.io/notes/2022/mandarin-chinese/</link>
      <pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2022/mandarin-chinese/</guid>
      <description>:ID: e699d35b-f546-4607-b444-d2be225d2574&#xA;Notes from the following courses:&#xA;Basic Mandarin Mandarin Chinese 1 Basic Mandarin at CII Pictograms Character Pronunciation Kind Meaning 木 mù noun tree, wood, coffin 火 huǒ fire, hot, urgent Useful words Character Pronunciation Kind Meaning 你 nǐ pron. you 好 hǎo adj. good 我 wǒ pron. I, me 是 shì v. to be, is, are, was, were 呢 ne part. 叫 jiào v. to be called 很 hěn adv.</description>
    </item>
    <item>
      <title>Kubernetes Ingress</title>
      <link>https://mtrsk.github.io/notes/2021/kubernetes-ingress/</link>
      <pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/kubernetes-ingress/</guid>
      <description>:ID: bd5dba58-0dd8-4b89-aabb-8bd49ed8c27c&#xA;What is an Ingress Controller? Opens the [BROKEN LINK: dd924a84-7d6f-41ec-98c2-aa16582c0d89] cluster to receive traffic from the external world Routes traffic to the backend services </description>
    </item>
    <item>
      <title>Distributed Systems</title>
      <link>https://mtrsk.github.io/notes/2021/distributed-systems/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/distributed-systems/</guid>
      <description>:ID: d7efb05f-fb8f-438c-b09d-ea91dc24ebc3&#xA;Readings from the following books:&#xA;Michael L. Perry&amp;rsquo;s &amp;ldquo;The Art of Immutable Architecture&amp;rdquo;. Properties of a reliable application&#xA;Idempotence Immutability Local Independence Versioning Why Immutable Architecture ..if you are in architecture, you are responsible for cutting the Gordian Knot of possible failures and mitigations. This is the fragile process by which we build the systems that run our society.&#xA;The Problems with Immutability It&amp;rsquo;s not how machines actually operate, i.</description>
    </item>
    <item>
      <title>Gitops</title>
      <link>https://mtrsk.github.io/notes/2021/gitops/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/gitops/</guid>
      <description>:ID: e670c5d9-8238-4bf4-a916-e9ffb3097fa1&#xA;Architecture Components Items Source Control Github, Gitlab, &amp;hellip; Git Resitory Container/Helm Registry Gitlab Registry, Azure Container Registry, &amp;hellip; Operator Flux, Argo CD, [BROKEN LINK: ee377537-0c8d-48c9-a181-19a2cff8c4a7] apply, &amp;hellip; Namespace A well defined namespace policy (per app, per environment, &amp;hellip; ArgoCD Architecture API Server&#xA;A gRPC/REST web server that exposes the API, it&amp;rsquo;s used by both the UI &amp;amp; CLI&#xA;Repository Server&#xA;Maintains a local cache of the git repository</description>
    </item>
    <item>
      <title>Kubernetes Secrets</title>
      <link>https://mtrsk.github.io/notes/2021/kubernetes-secrets/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/kubernetes-secrets/</guid>
      <description>:ID: 2bdf666d-f2a0-410a-a46a-45815fdf7285&#xA;A [BROKEN LINK: dd924a84-7d6f-41ec-98c2-aa16582c0d89] Secret is an object that contains a small amount of sensitive data such as a password, a token, or a key. Such information might otherwise be put in a Pod specification or in a container image. Using a Secret means that you don&amp;rsquo;t need to include confidential data in your application code.&#xA;YAML apiVersion: v1 kind: Secret metadata: name: example-secret type: Opaque data: app-password: NXVQNFNlS3J5dA== admin-password: RDBub3Q1VDM0TA== Accessing a secret As an environment variable apiVersion: apps/v1 .</description>
    </item>
    <item>
      <title>The Effective Manager</title>
      <link>https://mtrsk.github.io/notes/2021/the-effective-manager/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/the-effective-manager/</guid>
      <description>:ID: 32b2fe5a-3bc3-439b-a850-70a539498e9e&#xA;Teachable and Sustainable Skills However you manage, your techniques, behavior, and philosophy must be both teachable to others and sustainable.&#xA;To go up in any organization, you must be able to teach others to do what you do. If you&amp;rsquo;re irreplacable, you&amp;rsquo;re also unpromotable. The way an effective manager manages is visible to others and is teachable to others. And the effective manager can repeat the&#xA;Critical Behavior Manager Tool Get to know your people One on ones Communicate about performance Feedback Ask for more Coaching Push work down Delegation Know Your People: One On Ones One on ones are meetings that:</description>
    </item>
    <item>
      <title>History Of Logic</title>
      <link>https://mtrsk.github.io/notes/2021/history-of-logic/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/history-of-logic/</guid>
      <description>:ID: 0c082d02-4771-4860-8119-83b263c00ff3&#xA;Notes from the book &amp;ldquo;History of Logic: from Aristotle to Tarski&amp;rdquo;.&#xA;Intro Roughly speaking, the development of logic in Europe has had three &amp;ldquo;golden ages&amp;rdquo;:&#xA;Greek period, from around 350 to 200 BCE and included thinkers like: Aristotle Diodoru Cronus Chrysippus High medieval period, from around 1100 to 1400 Modern period, from around 1850 up to the present day The Greek period From the beginning of the Greek golden period we get many anticipations of later developments.</description>
    </item>
    <item>
      <title>Kubernetes Configmaps</title>
      <link>https://mtrsk.github.io/notes/2021/kubernetes-configmaps/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/kubernetes-configmaps/</guid>
      <description>:ID: c02e9bd0-e9fb-45d0-985a-4bdcbe62b8dc&#xA;ConfigMaps A ConfigMap is a [BROKEN LINK: dd924a84-7d6f-41ec-98c2-aa16582c0d89] API object used to store non-confidential data in key-value pairs. Pods can consume ConfigMaps as environment variables, command-line arguments, or as configuration files in a volume.&#xA;apiVersion: v1 kind: ConfigMap metadata: name: game-demo labels: app: game-demo data: # property-like keys; each key maps to a simple value player_initial_lives: &amp;#34;3&amp;#34; ui_properties_file_name: &amp;#34;user-interface.properties&amp;#34; # file-like keys game.properties: | enemy.types=aliens,monsters player.maximum-lives=5 user-interface.properties: | color.</description>
    </item>
    <item>
      <title>Kubernetes Storage</title>
      <link>https://mtrsk.github.io/notes/2021/kubernetes-storage/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/kubernetes-storage/</guid>
      <description>:ID: 1369d5e6-2858-4fc5-b59c-942326890b40&#xA;Volume Types emptyDir Empty directory for storing data ephemeral data from the Pods&#xA;apiVersion: v1 kind: Pod spec: volumes: - name: html emptyDir: {} containers: - name: nginx image: nginx:alpine volumeMounts: - name: html mountPath: /usr/share/nginx/html readOnly: false - name: html-example image: alpine:latest command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;] args: - while true; do date &amp;gt;&amp;gt; /html/index.html; sleep 10; done volumeMounts: - name: html mountPath: /html readOnly: false hostPath A volume that&amp;rsquo;s mounted in the Node&amp;rsquo;s filesystem and is shared with a Pod</description>
    </item>
    <item>
      <title>Dns</title>
      <link>https://mtrsk.github.io/notes/2021/dns/</link>
      <pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/dns/</guid>
      <description>:ID: f5f06bf3-d288-47a8-901f-37bec1ba50e7&#xA;Why do we need DNS? Human-Friendly Name Machine-Friendly Name dns.google.com 8.8.8.8 dns.cloudfare.com 1.1.1.1 Terminology Labels Node Subdomain Domain TLD Root www . abc . xyz . com . where TLD is an abbreviation for &amp;ldquo;Top Level Domain&amp;rdquo;.&#xA;Zones Query Types Recursive Iterative </description>
    </item>
    <item>
      <title>Helm</title>
      <link>https://mtrsk.github.io/notes/2021/helm/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/helm/</guid>
      <description>:ID: b9376a33-534c-4468-a788-df96a642a8e2&#xA;What is Helm? A tool that uses a package manager to create, install and manage applications inside a [BROKEN LINK: dd924a84-7d6f-41ec-98c2-aa16582c0d89] cluster.&#xA;What is a Helm Chart? A Helm Chart is a package containing files that will be used to deploy applications in the cluster. It consists of the following structure:&#xA;Chart.yaml Metadata for the application chart values.yaml Values to the injected at the templates in runtime templates A directory consisting of: deployment.</description>
    </item>
    <item>
      <title>Kubectl</title>
      <link>https://mtrsk.github.io/notes/2021/kubectl/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/kubectl/</guid>
      <description>:ID: ee377537-0c8d-48c9-a181-19a2cff8c4a7&#xA;Commands View cluster information kubectl cluster-info Apply &amp;amp; Create Just creates a resource kubectl create ... Create or modify a resource kubectl apply -f pod.yml Delete Deleting a pod won&amp;rsquo;t prevent it from being recreated.&#xA;kubectl delete pod [pod-name] you need to delete it&amp;rsquo;s deployment.&#xA;kubectl delete deployment [deployment-name] Describe kubectl describe pods &amp;lt;...&amp;gt; Get View all the resources kubectl get all Get information about the pods kubectl get pods --watch kubectl get pods -o wide Get information about deployments # Lists deployments and their labels kubectl get deployment --show-labels # Get deployments with a specific label kubectl get deployment -l app=nginx Port-forward Forward port to enables external calls kubectl port-forward [pod-name] [external-port]:[internal-port] # For instance.</description>
    </item>
    <item>
      <title>Kubernetes</title>
      <link>https://mtrsk.github.io/notes/2021/kubernetes/</link>
      <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/notes/2021/kubernetes/</guid>
      <description>:ID: dd924a84-7d6f-41ec-98c2-aa16582c0d89&#xA;Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications. &amp;mdash;kubernetes.io&#xA;Architecture Masters Also know as control plane.&#xA;A Kubernetes master is a collection of system services that make up the control plane of the cluster. The simplest setups run all the master services on a single host. However, this is only suitable for labs and test environments. For production environments, multi-master high availability (HA) is a must have.</description>
    </item>
    <item>
      <title>Switching To Nixos</title>
      <link>https://mtrsk.github.io/blog/2018/switching-to-nixos/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/blog/2018/switching-to-nixos/</guid>
      <description>After quite some time being a Debian user I&amp;rsquo;ve decided to become a full time meme distro user. At first I was following some of the manuals in an attempt to recreate my config in virtualbox. A day later this distro seemed too cool not to try it out for real, so why not?&#xA;It&amp;rsquo;s kinda weird to adapt, in Debian I was accostumed to just run a command here and there and have a bunch of config files across my system, with Nix (the configuration language) one can have a single file (configuration.</description>
    </item>
    <item>
      <title>Blogroll</title>
      <link>https://mtrsk.github.io/blogroll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mtrsk.github.io/blogroll/</guid>
      <description>This page is a rendered version of my OPML file.</description>
    </item>
  </channel>
</rss>
